<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.stuartryan.alfred.defaultbrowser</string>
	<key>category</key>
	<string>Tools</string>
	<key>connections</key>
	<dict>
		<key>3DDE09C2-6114-4192-82D8-25CBF2458817</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3FE887BF-1B3D-4893-86D1-148BB13B36BB</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>3FE887BF-1B3D-4893-86D1-148BB13B36BB</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>58518835-C5ED-4C48-8A72-B7BD5D924C1C</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Stuart Ryan</string>
	<key>description</key>
	<string></string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Set Default Browser</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>./defaultbrowser -set "{query}"
RESULT=$?
if [ $RESULT != 0 ]; then
   echo $RESULT
fi</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>3FE887BF-1B3D-4893-86D1-148BB13B36BB</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>db</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>script</key>
				<string>use strict;
use warnings;
use Data::Dumper;

my @availableBrowsers = `./defaultbrowser -status available`;
chomp @availableBrowsers;
my %availableBrowsersHash;
$availableBrowsersHash{$_}++ for (@availableBrowsers);
print qq{&lt;?xml version="1.0" encoding="UTF-8" ?&gt;\n&lt;items&gt;\n};


if ("{query}" eq "") {
if (exists $availableBrowsersHash{"chrome"}) {
print qq{&lt;item uid="0001"&gt;&lt;arg&gt;chrome&lt;/arg&gt;&lt;title&gt;Set default browser to Google Chrome&lt;/title&gt;&lt;subtitle&gt;&lt;/subtitle&gt;&lt;icon&gt;images/chrome.png&lt;/icon&gt;&lt;/item&gt;\n};
}
if (exists $availableBrowsersHash{"firefox"}) {
print qq{&lt;item uid="0002"&gt;&lt;arg&gt;firefox&lt;/arg&gt;&lt;title&gt;Set default browser to Firefox&lt;/title&gt;&lt;subtitle&gt;&lt;/subtitle&gt;&lt;icon&gt;images/firefox.png&lt;/icon&gt;&lt;/item&gt;\n};
}
if (exists $availableBrowsersHash{"opera"}) {
print qq{&lt;item uid="0003"&gt;&lt;arg&gt;opera&lt;/arg&gt;&lt;title&gt;Set default browser to Opera&lt;/title&gt;&lt;subtitle&gt;&lt;/subtitle&gt;&lt;icon&gt;images/opera.png&lt;/icon&gt;&lt;/item&gt;\n};
}
if (exists $availableBrowsersHash{"safari"}) {
print qq{&lt;item uid="0004"&gt;&lt;arg&gt;safari&lt;/arg&gt;&lt;title&gt;Set default browser to Apple Safari&lt;/title&gt;&lt;subtitle&gt;&lt;/subtitle&gt;&lt;icon&gt;images/safari.png&lt;/icon&gt;&lt;/item&gt;\n};
}
if (exists $availableBrowsersHash{"canary"}) {
print qq{&lt;item uid="0005"&gt;&lt;arg&gt;canary&lt;/arg&gt;&lt;title&gt;Set default browser to Chrome Canary&lt;/title&gt;&lt;subtitle&gt;&lt;/subtitle&gt;&lt;icon&gt;images/canary.png&lt;/icon&gt;&lt;/item&gt;\n};
}
if (exists $availableBrowsersHash{"chromium"}) {
print qq{&lt;item uid="0006"&gt;&lt;arg&gt;chromium&lt;/arg&gt;&lt;title&gt;Set default browser to Chromium&lt;/title&gt;&lt;subtitle&gt;&lt;/subtitle&gt;&lt;icon&gt;images/chromium.png&lt;/icon&gt;&lt;/item&gt;\n};
}
if (exists $availableBrowsersHash{"seamonkey"}) {
print qq{&lt;item uid="0007"&gt;&lt;arg&gt;seamonkey&lt;/arg&gt;&lt;title&gt;Set default browser to SeaMonkey&lt;/title&gt;&lt;subtitle&gt;&lt;/subtitle&gt;&lt;icon&gt;images/seamonkey.png&lt;/icon&gt;&lt;/item&gt;\n};
}
} 
if ("{query}" ne ""){
if ((index(lc('chrome'), lc("{query}")) != -1) &amp;&amp; (exists $availableBrowsersHash{"chrome"})) {
print qq{&lt;item uid="0001"&gt;&lt;arg&gt;chrome&lt;/arg&gt;&lt;title&gt;Set default browser to Google Chrome&lt;/title&gt;&lt;subtitle&gt;&lt;/subtitle&gt;&lt;icon&gt;images/chrome.png&lt;/icon&gt;&lt;/item&gt;\n};
}
if ((index(lc('firefox'), lc("{query}")) != -1) &amp;&amp; (exists $availableBrowsersHash{"firefox"})) {
print qq{&lt;item uid="0002"&gt;&lt;arg&gt;firefox&lt;/arg&gt;&lt;title&gt;Set default browser to Firefox&lt;/title&gt;&lt;subtitle&gt;&lt;/subtitle&gt;&lt;icon&gt;images/firefox.png&lt;/icon&gt;&lt;/item&gt;\n};
}
if ((index(lc('opera'), lc("{query}")) != -1) &amp;&amp; (exists $availableBrowsersHash{"opera"})) {
print qq{&lt;item uid="0003"&gt;&lt;arg&gt;opera&lt;/arg&gt;&lt;title&gt;Set default browser to Opera&lt;/title&gt;&lt;subtitle&gt;&lt;/subtitle&gt;&lt;icon&gt;images/opera.png&lt;/icon&gt;&lt;/item&gt;\n};
}
if ((index(lc('safari'), lc("{query}")) != -1) &amp;&amp; (exists $availableBrowsersHash{"safari"})) {
print qq{&lt;item uid="0004"&gt;&lt;arg&gt;safari&lt;/arg&gt;&lt;title&gt;Set default browser to Apple Safari&lt;/title&gt;&lt;subtitle&gt;&lt;/subtitle&gt;&lt;icon&gt;images/safari.png&lt;/icon&gt;&lt;/item&gt;\n};
}
if ((index(lc('canary'), lc("{query}")) != -1) &amp;&amp; (exists $availableBrowsersHash{"canary"})) {
print qq{&lt;item uid="0005"&gt;&lt;arg&gt;canary&lt;/arg&gt;&lt;title&gt;Set default browser to Chrome Canary&lt;/title&gt;&lt;subtitle&gt;&lt;/subtitle&gt;&lt;icon&gt;images/canary.png&lt;/icon&gt;&lt;/item&gt;\n};
}
if ((index(lc('chromium'), lc("{query}")) != -1) &amp;&amp; (exists $availableBrowsersHash{"chromium"})) {
print qq{&lt;item uid="0006"&gt;&lt;arg&gt;chromium&lt;/arg&gt;&lt;title&gt;Set default browser to Chromium&lt;/title&gt;&lt;subtitle&gt;&lt;/subtitle&gt;&lt;icon&gt;images/chromium.png&lt;/icon&gt;&lt;/item&gt;\n};
}
if ((index(lc('seamonkey'), lc("{query}")) != -1) &amp;&amp; (exists $availableBrowsersHash{"seamonkey"})) {
print qq{&lt;item uid="0007"&gt;&lt;arg&gt;seamonkey&lt;/arg&gt;&lt;title&gt;Set default browser to SeaMonkey&lt;/title&gt;&lt;subtitle&gt;&lt;/subtitle&gt;&lt;icon&gt;images/seamonkey.png&lt;/icon&gt;&lt;/item&gt;\n};
} 
}

print "&lt;/items&gt;\n";</string>
				<key>title</key>
				<string>Set Default Browser</string>
				<key>type</key>
				<integer>4</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>3DDE09C2-6114-4192-82D8-25CBF2458817</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<true/>
				<key>output</key>
				<integer>0</integer>
				<key>removeextension</key>
				<false/>
				<key>sticky</key>
				<false/>
				<key>title</key>
				<string>{query}</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>58518835-C5ED-4C48-8A72-B7BD5D924C1C</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>NOTE: This Alfred Workflow is provided free of charge under the GNU GENERAL PUBLIC LICENSE Version 2.

A huge thanks goes out to Margus Kerma (https://github.com/kerma) for the defaultbrowser binary for OSX (see https://github.com/kerma/defaultbrowser).

Margus has been kind enough to permit me to include the binary for defaultbrowser as part of this workflow to make distribution significantly easier.

For any bugs with this workflow please log them on Github https://github.com/stuartcryan/defaultbrowser-alfred-workflow. 

For any issues with the defaultbrowser binary please log these to Margus https://github.com/kerma/defaultbrowser.

This is version 1.0 of this workflow which uses https://github.com/kerma/defaultbrowser/commit/ba806eaba718f7f1fd9843106f860edcc6d8a0ee</string>
	<key>uidata</key>
	<dict>
		<key>3DDE09C2-6114-4192-82D8-25CBF2458817</key>
		<dict>
			<key>ypos</key>
			<real>130</real>
		</dict>
		<key>3FE887BF-1B3D-4893-86D1-148BB13B36BB</key>
		<dict>
			<key>ypos</key>
			<real>130</real>
		</dict>
		<key>58518835-C5ED-4C48-8A72-B7BD5D924C1C</key>
		<dict>
			<key>ypos</key>
			<real>130</real>
		</dict>
	</dict>
	<key>webaddress</key>
	<string>http://technicalnotebook.com</string>
</dict>
</plist>
